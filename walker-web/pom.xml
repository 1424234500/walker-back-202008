<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.walker</groupId>
		<artifactId>walker</artifactId>
		<version>0.0.1</version>
	</parent>


	<modelVersion>4.0.0</modelVersion>
	<groupId>com.walker</groupId>
	<artifactId>walker-web</artifactId>
	<version>0.0.1</version>
	<name>web</name>
	<description>desc web</description>
	<packaging>war</packaging>




	<properties>
		<spring.version>4.3.18.RELEASE</spring.version>
		<hibernate.version>5.3.10.Final</hibernate.version>
		
	</properties>





	<build>


		<plugins>
			<!-- 配置jdk编译版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>UTF-8</encoding>
					<verbose>false</verbose>
				</configuration>
			</plugin>


			<!-- 打包配置启动类 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>${dir_name_lib}</classpathPrefix>
							<mainClass>com.walker.socket.Launcher</mainClass>  <!-- 指定启动类 -->
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!--
            将打包后生成的jar复制到指定路径 命令mvn package后，才生成jar的包，如果单纯的用resources方法复制文件，是无法在package时复制一个还未存在的东西到某地的
             -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources-jar</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<!-- <delete dir="src/main/webapp/WEB-INF/lib" />-->
								<copy todir="${dir_release}">
									<fileset dir="${project.build.directory}">
										<include name="*.*ar" />
									</fileset>
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- 复制依赖jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- 打包前资源复制 构建项目部署结构 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources-conf</id>
						<!-- 触发阶段 process-resources 执行resources插件的copy-resources目标 -->
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 指定resources插件处理资源文件到哪个目录下 -->
							<outputDirectory>${dir_release}/${dir_name_conf}</outputDirectory>
							<!-- 待处理的资源定义 -->
							<resources>
								<resource>
									<!-- 指定resources插件处理哪个目录下的资源文件 -->
									<directory>${dir_name_conf}</directory>
									<!--  <filtering>true</filtering> -->
									<!-- <excludes> <exclude>WEB-INF/*.*</exclude> </excludes> -->
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-bin</id>
						<!-- 触发阶段 process-resources 执行resources插件的copy-resources目标 -->
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 指定resources插件处理资源文件到哪个目录下 -->
							<outputDirectory>${dir_release}</outputDirectory>
							<!-- 待处理的资源定义 -->
							<resources>
								<resource>
									<!-- 指定resources插件处理哪个目录下的资源文件 -->
									<directory>${dir_name_bin}</directory>
									<!--  <filtering>true</filtering> -->
									<!-- <excludes> <exclude>WEB-INF/*.*</exclude> </excludes> -->
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


	<dependencies>


		<dependency>
			<groupId>com.walker</groupId>
			<artifactId>walker-core</artifactId>
			<version>0.0.1</version>
		</dependency>

		<dependency>
			<groupId>com.walker</groupId>
			<artifactId>walker-service</artifactId>
			<version>0.0.1</version>
		</dependency>



		<!--spring核心包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
 <!-- 添加spring-context包 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.9.9</version>
</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

	 <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
	</dependency>
<!-- <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-aop</artifactId>
    <version>4.3.24.RELEASE</version>
</dependency> -->

        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.6.11</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.6.11</version>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.1_3</version>
		</dependency>

		<!--JSTL标签类 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- tomcat冲突 运行时？ -->
		<dependency> 
		   <groupId>javax.servlet</groupId> 
		   <artifactId>servlet-api</artifactId> 
		   <version>2.5</version> 
		   <scope>provided</scope> 
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.xml.ws/jaxws-api -->
		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

			
		
		<!-- mybatis- -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.0</version>
		</dependency>

		<!--mybatis-spring适配器 -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.3.0</version>
        </dependency>

<dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.3</version>
</dependency>
	</dependencies>











</project>