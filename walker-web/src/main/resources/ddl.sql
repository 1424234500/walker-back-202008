-- 用户 数据库 分表
-- CREATE DATABASE IF NOT EXISTS walker default charset utf8 COLLATE utf8_general_ci;
-- GRANT ALL PRIVILEGES ON *.* TO 'walker'@'%' IDENTIFIED BY 'qwer' WITH GRANT OPTION;




---通用字段
---ID       VARCHAR2(32)     主键
---S_MTIME  VARCHAR2(32)	 long/字符串ymdhms 修改时间 自动设置	YYYY-MM-DD HH24:MM-SS:SSS
---S_ATIME  VARCHAR2(32)	 long/字符串ymdhms 添加时间 自动设置	YYYY-MM-DD HH24:MM-SS:SSS
---S_FLAG   VARCHAR2(2)      0否/1是     假删除 配合S_MTIME增量查询
---














-- # Quartz - mysql - init sql
-- # Quartz seems to work best with the driver mm.mysql-2.0.7-bin.jar
-- #
-- # PLEASE consider using mysql with innodb tables to avoid locking issues
-- #
-- # In your Quartz properties file, you'll need to set
-- # org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
-- #
-- DROP TABLE IF EXISTS W_QRTZ_FIRED_TRIGGERS;
-- DROP TABLE IF EXISTS W_QRTZ_PAUSED_TRIGGER_GRPS;
-- DROP TABLE IF EXISTS W_QRTZ_SCHEDULER_STATE;
-- DROP TABLE IF EXISTS W_QRTZ_LOCKS;
-- DROP TABLE IF EXISTS W_QRTZ_SIMPLE_TRIGGERS;
-- DROP TABLE IF EXISTS W_QRTZ_SIMPROP_TRIGGERS;
-- DROP TABLE IF EXISTS W_QRTZ_CRON_TRIGGERS;
-- DROP TABLE IF EXISTS W_QRTZ_BLOB_TRIGGERS;
-- DROP TABLE IF EXISTS W_QRTZ_TRIGGERS;
-- DROP TABLE IF EXISTS W_QRTZ_JOB_DETAILS;
-- DROP TABLE IF EXISTS W_QRTZ_CALENDARS;

CREATE TABLE W_QRTZ_JOB_DETAILS
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    JOB_NAME  VARCHAR(200) NOT NULL COMMENT '任务名',
    JOB_GROUP VARCHAR(200) NOT NULL COMMENT '任务组',
    DESCRIPTION VARCHAR(250) NULL COMMENT '描述',
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL  COMMENT '类名',
    IS_DURABLE VARCHAR(1) NOT NULL COMMENT '持久化',
    IS_NONCONCURRENT VARCHAR(1) NOT NULL COMMENT '并发执行',
    IS_UPDATE_DATA VARCHAR(1) NOT NULL COMMENT '更新数据',
    REQUESTS_RECOVERY VARCHAR(1) NOT NULL COMMENT '可中断恢复',
    JOB_DATA BLOB NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE W_QRTZ_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器组',
    JOB_NAME  VARCHAR(200) NOT NULL COMMENT '任务名',
    JOB_GROUP VARCHAR(200) NOT NULL COMMENT '任务组',
    DESCRIPTION VARCHAR(250) NULL COMMENT '描述',
    NEXT_FIRE_TIME BIGINT(13) NULL COMMENT '下次触发时间ms',
    PREV_FIRE_TIME BIGINT(13) NULL COMMENT '上次触发时间',
    PRIORITY INTEGER NULL COMMENT '权重',
    TRIGGER_STATE VARCHAR(16) NOT NULL COMMENT '状态',
    TRIGGER_TYPE VARCHAR(8) NOT NULL COMMENT '触发类型cron,simple,calendar',
    START_TIME BIGINT(13) NOT NULL COMMENT '开始时间',
    END_TIME BIGINT(13) NULL COMMENT '结束时间',
    CALENDAR_NAME VARCHAR(200) NULL COMMENT 'calendar名',
    MISFIRE_INSTR SMALLINT(2) NULL COMMENT '-1错过执行 0正常',
    JOB_DATA BLOB NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
        REFERENCES W_QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE W_QRTZ_SIMPLE_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器组',
    REPEAT_COUNT BIGINT(7) NOT NULL COMMENT '重复次数',
    REPEAT_INTERVAL BIGINT(12) NOT NULL COMMENT '间隔周期',
    TIMES_TRIGGERED BIGINT(10) NOT NULL COMMENT '运行次数',
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES W_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE W_QRTZ_CRON_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名',
    TRIGGER_GROUP VARCHAR(200) NOT NULL  COMMENT '触发器组',
    CRON_EXPRESSION VARCHAR(200) NOT NULL COMMENT 'cron表达式',
    TIME_ZONE_ID VARCHAR(80) COMMENT '时区',
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES W_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE W_QRTZ_SIMPROP_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器组',
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 VARCHAR(1) NULL,
    BOOL_PROP_2 VARCHAR(1) NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
    REFERENCES W_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE W_QRTZ_BLOB_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器组',
    BLOB_DATA BLOB NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES W_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE W_QRTZ_CALENDARS
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    CALENDAR_NAME  VARCHAR(200) NOT NULL  COMMENT '日历名',
    CALENDAR BLOB NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);

CREATE TABLE W_QRTZ_PAUSED_TRIGGER_GRPS
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    TRIGGER_GROUP  VARCHAR(200) NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);

-- 说明:要被执行的任务将出现在此表，执行完后删除
CREATE TABLE W_QRTZ_FIRED_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器组',
    INSTANCE_NAME VARCHAR(200) NOT NULL COMMENT '实例对象名',
    FIRED_TIME BIGINT(13) NOT NULL COMMENT '触发时间',
    SCHED_TIME BIGINT(13) NOT NULL COMMENT '下次fire时间',
    PRIORITY INTEGER NOT NULL COMMENT '优先级',
    STATE VARCHAR(16) NOT NULL COMMENT '状态',
    JOB_NAME VARCHAR(200) NULL COMMENT '任务名',
    JOB_GROUP VARCHAR(200) NULL COMMENT '任务组',
    IS_NONCONCURRENT VARCHAR(1) NULL,
    REQUESTS_RECOVERY VARCHAR(1) NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);

CREATE TABLE W_QRTZ_SCHEDULER_STATE
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT(13) NOT NULL COMMENT '上次检查时间',
    CHECKIN_INTERVAL BIGINT(13) NOT NULL COMMENT '检查周期',
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);

-- 说明:字典表，初始化两条记录，一个是获取trigger的锁，一个触发trigger的锁
CREATE TABLE W_QRTZ_LOCKS
  (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '实例名',
    LOCK_NAME  VARCHAR(40) NOT NULL COMMENT '锁名',
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);


