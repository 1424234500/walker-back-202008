<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 可配置于classPath:dubbo.properties -->

    <!-- name提供方应用名 owner负责人 aa-->
    <dubbo:application name="service-provider" owner="walker" logger="log4j"  />

    <!-- 提供服务端口 -->
    <dubbo:protocol name="dubbo" port="8095" />

    <!--
        注册中心
        register="false"    只订阅
        redis   http://dubbo.apache.org/zh-cn/docs/user/references/registry/redis.html

    -->

<!-- zookeeper 版本可配？ 多ip问题汉注意！ enable="true" ,122.10.1.12:2182 register="false" 只订阅 -->
<!--    <dubbo:registry protocol="redis" address="localhost:6379,localhost:6389,localhost:6399" />-->
    <dubbo:registry protocol="zookeeper" address="localhost:8096,localhost:8888" timeout="30000" check="false" />
    <!-- 监控中心 从注册中心获取监控地址 address version -->
    <dubbo:monitor protocol="registry"  />

    <!-- 指定了集群容错模式，此处为快速失败 -->
<!--    <dubbo:provider cluster="failfast"/>-->

    <!-- 1.提供者 服务提供 ref：指向注解定义的本地dubbo-bean而非spring-bean?（多实现分组） interface：指向接口-->
    <!--具体实现该接口的 bean-->
    <bean id="echoService" class="com.walker.service.impl.EchoServiceImpl" />
    <!--
        要暴露的服务接口
        delay="-1"
        配置加载 迟加载 避免在spring上下文未初始化时 报错
        executes="10"
        这个接口下边全部的方法累积，全部并发不能超过10
    -->
    <dubbo:service ref="echoService" interface="com.walker.service.EchoService" timeout="30000" version="1.0" delay="-1" />


<!--    自定义实现monitor功能-->
    <!-- Monitor服务 自实现 提供存储 查询监控 -->
    <bean id="monitorService" class="com.walker.service.impl.DubboMonitorService" />
    <dubbo:service ref="monitorService" interface="com.alibaba.dubbo.monitor.MonitorService" timeout="30000" version="1.0" delay="-1" />
    <!--消费dubbo注册中心接口?-->
<!--    <dubbo:reference id="registryService" interface="com.alibaba.dubbo.registry.RegistryService" timeout="30000" version="1.0"   />-->

<!--    常规业务引用-->

    <!--日志服务-->
    <bean id="logService" class="com.walker.service.impl.LogServiceImpl" />
    <dubbo:service ref="logService" interface="com.walker.service.LogService" timeout="30000" version="1.0" delay="-1" />

    <!--文件索引服务-->
    <bean id="fileIndexService" class="com.walker.service.impl.FileIndexServiceImpl" />
    <dubbo:service ref="fileIndexService" interface="com.walker.service.FileIndexService" timeout="30000" version="1.0" delay="-1" />

    <!--基础sql-->
    <bean id="baseService" class="com.walker.service.impl.BaseServiceImpl" />
    <dubbo:service ref="baseService" interface="com.walker.service.BaseService" timeout="30000" version="1.0" delay="-1" />


    <!--    登录服务-->
    <bean id="loginService" class="com.walker.service.impl.LoginServiceImpl" />
    <dubbo:service ref="loginService" interface="com.walker.service.LoginService" timeout="30000" version="1.0" delay="-1" />
    <!--    配置服务-->
    <bean id="sysConfigService" class="com.walker.service.impl.SysConfigServiceImpl" />
    <dubbo:service ref="sysConfigService" interface="com.walker.service.SysConfigService" timeout="30000" version="1.0" delay="-1" />



    <!--    jdbc teacher增删查改 同服务不同实现 须分组-->
    <bean id="teacherJdbcService" class="com.walker.service.impl.TeacherJdbcServiceImpl" />
    <dubbo:service ref="teacherJdbcService" interface="com.walker.service.TeacherService" timeout="30000" version="1.0" delay="-1" />
    <!--    jpa teacher增删查改 同服务不同实现 须分组-->
    <bean id="teacherJpaService" class="com.walker.service.impl.TeacherJpaServiceImpl" />
    <dubbo:service ref="teacherJpaService" interface="com.walker.service.TeacherService" group="jpa" timeout="30000" version="1.0" delay="-1" />
    <!--    用户student-->
    <bean id="studentService" class="com.walker.service.impl.StudentServiceImpl" />
    <dubbo:service ref="studentService" interface="com.walker.service.StudentService" timeout="30000" version="1.0" delay="-1" />

    <!--    用户user-->
    <bean id="userService" class="com.walker.service.impl.UserServiceImpl" />
    <dubbo:service ref="userService" interface="com.walker.service.UserService" timeout="30000" version="1.0" delay="-1" />
    <!--    部门dept-->
    <bean id="deptService" class="com.walker.service.impl.DeptServiceImpl" />
    <dubbo:service ref="deptService" interface="com.walker.service.DeptService" timeout="30000" version="1.0" delay="-1" />
    <!--    地理area-->
    <bean id="areaService" class="com.walker.service.impl.AreaServiceImpl" />
    <dubbo:service ref="areaService" interface="com.walker.service.AreaService" timeout="30000" version="1.0" delay="-1" />
    <!--    角色role-->
    <bean id="roleService" class="com.walker.service.impl.RoleServiceImpl" />
    <dubbo:service ref="roleService" interface="com.walker.service.RoleService" timeout="30000" version="1.0" delay="-1" />
    <!--    角色role关联-->
    <bean id="roleUserService" class="com.walker.service.impl.RoleUserServiceImpl" />
    <dubbo:service ref="roleUserService" interface="com.walker.service.RoleUserService" timeout="30000" version="1.0" delay="-1" />

    <!--    调度类型 触发 异步 耗时操作-->
    <bean id="syncService" class="com.walker.service.impl.SyncServiceImpl" />
    <dubbo:service ref="syncService" interface="com.walker.service.SyncService" timeout="30000" version="1.0" delay="-1" />



    <!--    消息表服务 手动分表-->
    <bean id="messageService" class="com.walker.service.impl.MessageServiceImpl" />
    <dubbo:service ref="messageService" interface="com.walker.service.MessageService" timeout="30000" version="1.0" delay="-1" />
<!--    消息表服务 自动分表-->
    <bean id="messageServiceSharding" class="com.walker.service.impl.MessageServiceShardingImpl" />
    <dubbo:service ref="messageServiceSharding" interface="com.walker.service.MessageService" group="sharding" timeout="30000" version="1.0" delay="-1" />
<!--    消息推送提醒服务 分类 -->
    <bean id="pushAgentService" class="com.walker.service.impl.PushAgentServiceImpl" />
    <dubbo:service ref="pushAgentService" interface="com.walker.service.PushAgentService" timeout="30000" version="1.0" delay="-1" />


    <!-- 2.消费者 消费服务 id:bean名字 interface:指向远程接口 group:多实现分组区分 -->
<!--    <dubbo:reference id="echoServiceDubbo" interface="com.walker.service.EchoService" version="1.0" timeout="1024"></dubbo:reference>-->


</beans>
<!--
超时配置
<dubbo:consumer timeout="5000" />
<dubbo:reference interface="com.foo.BarService" timeout="2000">
    <dubbo:method name="sayHello" timeout="3000" />
</dubbo:reference>
1. 方法级配置别优于接口级别，即小Scope优先
2. Consumer端配置优于Provider配置，优于全局配置
3. Dubbo Hard Code的配置值（默认）

应用负责人，用于服务治理
dubbo.owner=dzm
#组织名称(BU或部门)，用于注册中心区分服务来源
dubbo.organization=dzmsoft
#注册中心地址
dubbo.registry.address=zookeeper://192.168.5.122:8096?backup=192.168.5.122:2182,192.168.5.122:2183
#端口号，同一电脑不可复用
dubbo.protocol=8095
#是否启用JSR303标准注解验证
dubbo.service.validation=true
#服务版本，通常在接口不兼容时版本号才需要升级
dubbo.service.version=1.0.0
#远程服务调用超时时间(毫秒)
dubbo.service.timeout=5000
#远程服务调用重试次数，不包括第一次调用，不需要重试请设为0
dubbo.service.retries=2
#负载均衡策略，可选值：random,roundrobin,leastactive，分别表示：随机，轮循，最少活跃调用
dubbo.service.loadbalance=leastactive
#每服务消费者每服务每方法最大并发调用数
dubbo.service.actives=150

#启动时检查提供者是否存在，true报错，false忽略
dubbo.reference.check=false
#服务版本，与服务提供者的版本一致
dubbo.reference.version=1.0.0
-->