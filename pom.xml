<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.walker</groupId>
	<artifactId>walker</artifactId>
	<version>0.0.1</version>
	<name>walker</name>
	<description>walker's project parent</description>
	<packaging>pom</packaging>


	<modules>
		<module>walker-core</module>
		<module>walker-socket</module>
		<module>walker-web</module>
		<module>walker-service</module>
		<module>walker-service-provider</module>
    </modules>



	<properties>
	<!--
${basedir} 项目根目录
${project.build.directory} 构建目录，缺省为target
${project.build.outputDirectory} 构建过程输出目录，缺省为target/classes
${project.build.finalName} 产出物名称，缺省为${project.artifactId}-${project.version}
${project.packaging} 打包类型，缺省为jar
${project.xxx} 当前pom文件的任意节点的内容
	  -->
        <jdk.version>1.8</jdk.version>
        <!-- 1.7webservice而1.8需要修改  -->
        
        <dir_name_bin>bin</dir_name_bin>
        <dir_name_conf>conf</dir_name_conf>
        <dir_name_lib>lib</dir_name_lib>
        <dir_release>${basedir}/release</dir_release>
        
        
    </properties>
	

	<build>
	
	
		<plugins>
		<!-- 配置jdk编译版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>UTF-8</encoding>
					<verbose>false</verbose>
				</configuration>
			</plugin>




			<!-- 打包配置启动类 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>${dir_name_lib}</classpathPrefix>
							<mainClass>com.walker.core.Launcher</mainClass>  <!-- 指定启动类 -->
						</manifest>
					</archive>
				</configuration>
			</plugin>
<!-- 
将打包后生成的jar复制到指定路径 命令mvn package后，才生成jar的包，如果单纯的用resources方法复制文件，是无法在package时复制一个还未存在的东西到某地的
 -->
			<plugin>  
	            <artifactId>maven-antrun-plugin</artifactId>  
	            <executions>  
	                <execution>  
	                    <id>copy-resources-jar</id>  
	                    <phase>package</phase>  
	                    <configuration>  
	                        <tasks>  
	                           <!-- <delete dir="src/main/webapp/WEB-INF/lib" />-->  
	                            <copy todir="${dir_release}">  
	                                <fileset dir="${project.build.directory}">  
	                                    <include name="*.*ar" />  
	                                </fileset>  
	                            </copy>  
	                        </tasks>  
	                    </configuration>  
	                    <goals>  
	                        <goal>run</goal>  
	                    </goals>  
	                </execution>  
	            </executions>  
	        </plugin>  
			<!-- 复制依赖jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${dir_release}/${dir_name_lib}</outputDirectory>  	<!-- copy lib目录 -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 打包前资源复制 构建项目部署结构 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources-conf</id>
						<!-- 触发阶段 process-resources 执行resources插件的copy-resources目标 -->
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 指定resources插件处理资源文件到哪个目录下 -->
							<outputDirectory>${dir_release}/${dir_name_conf}</outputDirectory>
							<!-- 待处理的资源定义 -->
							<resources>
								<resource>
									<!-- 指定resources插件处理哪个目录下的资源文件 -->
									<directory>${dir_name_conf}</directory>
									<!--  <filtering>true</filtering> -->
									<!-- <excludes> <exclude>WEB-INF/*.*</exclude> </excludes> -->
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-bin</id>
						<!-- 触发阶段 process-resources 执行resources插件的copy-resources目标 -->
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 指定resources插件处理资源文件到哪个目录下 -->
							<outputDirectory>${dir_release}</outputDirectory>
							<!-- 待处理的资源定义 -->
							<resources>
								<resource>
									<!-- 指定resources插件处理哪个目录下的资源文件 -->
									<directory>${dir_name_bin}</directory>
									<!--  <filtering>true</filtering> -->
									<!-- <excludes> <exclude>WEB-INF/*.*</exclude> </excludes> -->
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>



		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12 -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-log4j12</artifactId>
		    <version>1.7.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160810</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.58</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.directory.studio/org.apache.commons.io -->
		<dependency>
			<groupId>org.apache.directory.studio</groupId>
			<artifactId>org.apache.commons.io</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.8</version>

		</dependency>
	</dependencies>
</project>